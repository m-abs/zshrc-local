export ANDROID_HOME=$HOME/tools/android/android-sdk-linux

if [[ -d $ANDROID_HOME ]]; then
  PATH=$PATH:$ANDROID_HOME:$ANDROID_HOME/tools
  export PATH

  # For SDK version r_08 and higher, also add this for adb:
  [[ -d $ANDROID_HOME/platform-tools ]] && PATH=$PATH:$ANDROID_HOME/platform-tools
  export PATH
fi

if [[ -x $( which ksshaskpass ) ]]; then
  export SSH_ASKPASS=$(which ksshaskpass);
  ssh-add < /dev/null
fi

export LANGUAGE=en
export LANG=en_DK.UTF-8
export LC_ALL=en_DK.UTF-8

export LESS="-R"
export EDITOR=vim
export VISUAL=vim

for d in $( find ~/project -maxdepth 1 -type d ); do
  n=$(basename $d);
  alias cd$n="cd $d";
done

unalias a
unalias ai
alias playdelete="find . -type f -exec mplayer2 -fs '{}' \; -exec rm -vi '{}' \;"

# export NPM_PACKAGES=$HOME/.npm/packages
# export PATH=$NPM_PACKAGES/bin:$PATH
# export NODE_PATH=$NPM_PACKAGES/lib/node_modules:/usr/share/npm/node_modules

###-begin-npm-completion-###
#
# npm command completion script
#
# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
#

COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
export COMP_WORDBREAKS

if type complete &>/dev/null; then
  _npm_completion () {
    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           npm completion -- "${COMP_WORDS[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -F _npm_completion npm
elif type compdef &>/dev/null; then
  _npm_completion() {
    si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 npm completion -- "${words[@]}" \
                 2>/dev/null)
    IFS=$si
  }
  compdef _npm_completion npm
elif type compctl &>/dev/null; then
  _npm_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       npm completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _npm_completion npm
fi
###-end-npm-completion-###

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
nvm use stable

if [[ -x $(which nvim) ]]; then
  alias vim="nvim"
fi

# NYTprof doesn't capture sigexit by default, which is bad when working with Perl and catelyst
export NYTPROF=sigexit=1

if [ -d "$HOME/.bin" ]; then
  export PATH=$PATH:$HOME/.bin
fi

###-tns-completion-start-###
if [ -f $HOME/.tnsrc ]; then
    source $HOME/.tnsrc
fi
###-tns-completion-end-###
